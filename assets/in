#!/bin/bash

output_json=""
input_json="$(cat)"

{
    # parse out the input params
    auth_token=$(echo "${input_json}" | jq .source.auth_token -r)
    version=$(echo "${input_json}" | jq '.version.ref' -r )
    org=$(echo "${input_json}" | jq .source.org -r)
    team=$(echo "${input_json}" | jq .source.team -r)
    repos_excluded=$(echo "${input_json}" | jq '.source.repos_excluded // empty')

    # iterate through all team's repos
    repos_url=$(curl -H "Authorization: token $auth_token" -s "https://api.github.com/orgs/${org}/teams?per_page=100" | jq ".[] | select(.name == \"${team}\") | .repositories_url" -r)
    echo "Team repository URL : $repos_url"
    curl -H "Authorization: token $auth_token" -s "${repos_url}?per_page=100" | jq '.[] | (.clone_url + " " + .full_name)' -r > /tmp/repos.list
    while read -r repo name; do

        # skip over the excluded repos here
        if [[ ! -z "${repos_excluded}" && $(echo "${repos_excluded}" | jq "index(\"${name}\") // -1") -ge 0 ]]; then
            echo "Skipping Excluded: ${repo}"
            continue
        fi

        repo_dir="/tmp/build/get/repos/$name"
        if [[ -d $repo_dir ]]; then
            # #######################################################################
            # TODO: the auth_token might have changed and we need to use the one
            # supplied in the input instead of the one we used in the last run
            # #######################################################################
            echo; echo "Pulling: ${repo}"
            (cd $repo_dir; git pull; git reset --hard )
        else
            echo; echo "Cloning: ${repo} to $repo_dir"
            mkdir -p $repo_dir
            repo_with_auth_token="https://${auth_token}@${repo:8}"
            git clone $repo_with_auth_token $repo_dir
            (cd $repo_dir; git reset --hard )
        fi


    done < /tmp/repos.list

} 1>&2 2>/tmp/in.debug


# create the output
echo "${input_json}" | jq '{ version:.version, metadata:[] }' -c
